enum Errors {
  sendSms,
  updateDisplayName,
  logout,
  serverError,
  storageError,
  listener,
  notLogedIn,
  illegalFields,
  passedLimit,
  notFoundItem,
  takenBooking,
  alreadyWorker,
  userNotFound,
  verification,
  network,
  emptyField,
  alreadyExistItem,
  uploadImages,
  notSelectedImages,
  wrongOptCode,
  expiredOpt,
  unknown,
  timeout,
  purchaseError,
  anonymouslySignIn,
  lowSubType,
  coincidingEvent,
  realTimeServerError,
  blockedUser,
  noPermission
}

Map<Errors, String> errorMessage = {
  Errors.serverError: "errorWithServer",
  Errors.updateDisplayName: "cantSaveName",
  Errors.sendSms: "errorWhileSending",
  Errors.logout: "errorWhileLogout",
  Errors.storageError: "errorWithDataBase",
  Errors.listener: "errorListeners",
  Errors.notLogedIn: "noConnected",
  Errors.illegalFields: "illegalFields",
  Errors.passedLimit: "passLimit",
  Errors.notFoundItem: "noAvailable",
  Errors.takenBooking: "alreadyTaken",
  Errors.alreadyWorker: "alreadyWorker",
  Errors.userNotFound: "notFoundUser",
  Errors.verification: "verificationError",
  Errors.network: "networkError",
  Errors.emptyField: "noInfo",
  Errors.notSelectedImages: "noPickedImages",
  Errors.alreadyExistItem: "alreadyExist",
  Errors.uploadImages: "partOfImagesFaild",
  Errors.unknown: "uploadFailed",
  Errors.timeout: "timeout",
  Errors.wrongOptCode: "wrongOpt",
  Errors.expiredOpt: "expiredOpt",
  Errors.purchaseError: "purchaseError",
  Errors.anonymouslySignIn: "anonymouslySignIn",
  Errors.lowSubType: "lowSubType",
  Errors.coincidingEvent: "UpdatedVacationsEventError",
  Errors.realTimeServerError: "realTimeServerError",
  Errors.blockedUser: "blockUser",
  Errors.noPermission: "noPermission"
};
